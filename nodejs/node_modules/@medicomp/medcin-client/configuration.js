/*** Created by pkarcher on 12/12/2014.*/
'use strict';

var Q = require ('q');
var fs = require('fs');
var medicomp = medicomp || require(__dirname + '/index');

var Configuration = function(seedValues) {

  var host = seedValues && seedValues.host || 'localhost';
  var port = seedValues && seedValues.port || 8080;
  var actuallyConnect = (seedValues === undefined) ||
    (('actuallyConnect' in seedValues) ? seedValues.actuallyConnect : true);
  //if (seedValues == undefined) {
  //  actuallyConnect = true;
  //} else {
  //  actuallyConnect = ('actuallyConnect' in seedValues) ? seedValues.actuallyConnect : true;
  //}

  var deferred = Q.defer();
  fs.readFile(__dirname + '/VERSION', 'utf-8', function (error, text) {
    if (error) {
      deferred.reject(new Error(error));
    } else {
      var splitVersion = text.split('.');
      var providedVersionObject = {
        toString : function() {
          return text;
        },
        major1 : splitVersion[0] || '',
        minor2 : splitVersion[1] || '',
        build3 : splitVersion[2] || '',
        revision4 : splitVersion[3] || '',
        full : text
      };
      deferred.resolve(providedVersionObject);
    }
  });

  if (!(medicomp.clientVersion)) {
    var text = fs.readFileSync(__dirname + '/VERSION', 'utf-8');
    var splitVersion = text.split('.');
    medicomp.clientVersion = {
      toString : function() {
        return text;
      },
      major1 : splitVersion[0] || '',
      minor2 : splitVersion[1] || '',
      build3 : splitVersion[2] || '',
      revision4 : splitVersion[3] || '',
      full : text
    };

  }

  return {
    host : host,
    port : port,
    actuallyConnect : actuallyConnect,
    versionAsync : deferred.promise,
    version : medicomp.clientVersion
  };

};

module.exports = Configuration;


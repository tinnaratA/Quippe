/*** Created by pkarcher on 1/8/2015.*/
'use strict';

var should = require('should');
var medicomp = medicomp || require('../index');
var ServerCode = require('../ServerCodes');


describe('medicomp.SocketBuffer', function () {

  describe('when pushing values', function () {

    it('pushes Shorts (Int16) correctly', function () {
      var socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushShort (1943, 'blah');
      socketBuffer.pushShort (90, 'blah');
      should(socketBuffer.bufferArray).eql([7, 151, 0, 90]);

      socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushShorts (1943, 'blah', 90, 'blah');
      should(socketBuffer.bufferArray).eql([7, 151, 0, 90]);
    });

    it('pushes Integers (Int32) correctly', function () {
      var socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushInt (9045, 'blah');
      socketBuffer.pushInt (2043654239, 'blah');
      should(socketBuffer.bufferArray).eql([0, 0, 35, 85, 121, 207, 176, 95]);

      socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushInts (9045, 'blah', 2043654239, 'blah');
      should(socketBuffer.bufferArray).eql([0, 0, 35, 85, 121, 207, 176, 95]);
    });

    it('pushes Doubles correctly', function () {
    var socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
    socketBuffer.pushDouble (40, 'blah');
    should(socketBuffer.bufferArray).eql([64, 68, 0, 0, 0, 0, 0, 0]);

    socketBuffer.pushDouble (23.343, 'blah');
    should(socketBuffer.bufferArray).eql([64, 68, 0, 0, 0, 0, 0, 0, 64, 55, 87, 206, 217, 22, 135, 43]);

    socketBuffer.pushDoubles (-4000.0999, 'blah', -0.000007111, 'blah');
    should(socketBuffer.bufferArray).eql([64, 68, 0, 0, 0, 0, 0, 0, 64, 55, 87, 206, 217, 22, 135, 43,
      192, 175, 64, 51, 38, 23, 193, 190, 190, 221, 211, 96, 203, 216, 237, 40]);
    });

    it('pushes Strings correctly', function () {
      var socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushString ('Wilson', 'blah');
      socketBuffer.pushString ('', 'blah');
      socketBuffer.pushString ('pain in left shoulder', 'blah');
      should(socketBuffer.bufferArray).eql([87,105,108,115,111,110,0,0,112,97,105,110,32,105,110,
        32,108,101,102,116,32,115,104,111,117,108,100,101,114,0]);

      socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.pushStrings ('Wilson', 'favorite_president', '', 'irrational fears',
        'pain in left shoulder', 'pain I don\'t want');
      should(socketBuffer.bufferArray).eql([87,105,108,115,111,110,0,0,112,97,105,110,32,105,110,
        32,108,101,102,116,32,115,104,111,117,108,100,101,114,0]);
    });

  });

  describe('when wrapping up the buffer', function () {

    it('wrapUpBuffer works correctly', function () {

      var socketBuffer = new medicomp.SocketBuffer(ServerCode.GetProperty);
      socketBuffer.wrapUpBuffer();
      should(socketBuffer.bufferArray).eql([0, 52, 0, 0, 0, 6]);

      socketBuffer = new medicomp.SocketBuffer(ServerCode.HistAddEncounterHeadings);
      socketBuffer.pushString ('Dupont', 'favorite circle');
      socketBuffer.pushInt (8724340, 'earth forces'); //100001010001111101110100
      socketBuffer.pushDouble (9012349349032, 'alien forces'); //10000011001001011001111000011010110010101000
      socketBuffer.pushDouble (9012349349032, 'aliens we need to kill'); //10000011001001011001111000011010110010101000
      socketBuffer.pushShort (700, 'earth cities destroyed so far'); //1010111100
      socketBuffer.pushString ('spouting abusive @#!%@$', 'main symptom');
      socketBuffer.wrapUpBuffer();
      should(socketBuffer.bufferArray).eql([1, 16, 0, 0, 0, 59, 68, 117, 112, 111, 110, 116, 0,
        0, 133, 31, 116, 66, 160, 100, 179, 195, 89, 80, 0, 66, 160, 100, 179, 195, 89, 80, 0, 2, 188,
        115, 112, 111, 117, 116, 105, 110, 103, 32, 97, 98, 117, 115, 105, 118, 101, 32, 64, 35, 33, 37, 64, 36, 0]);

    });

  });

});

